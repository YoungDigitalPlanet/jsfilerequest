<?xml version="1.0" encoding="utf-8" ?>
<project name="jsfilerequest" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant"  >
    

	<tstamp><format property="tstamp" pattern="yyyyMMddHHmm" timezone="GMT"/></tstamp>
	<property file="default.properties" />

	<dirname property="base.dir" file="${ant.file.jsfilerequest}" />
	<property name="ivylib.dir" value="${base.dir}/ivy-lib" />	
	<property name="src.dir" value="${base.dir}/src" />	
	<property name="build.dir" location="${base.dir}/build" />
	<property name="classes.dir" location="${build.dir}/classes" />
	<property name="dist.dir" location="${base.dir}/dist" />

	<property name="ivy.install.version" value="2.1.0-rc2" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
		<isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="offline">

		<mkdir dir="${ivy.jar.dir}"/>
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
			 dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="init-ivy" depends="download-ivy">
		<!-- try to load ivy here from ivy home, in case the user has not already dropped
                it into ant's lib dir (note that the latter copy will always take precedence).
                We will not fail as long as local lib dir exists (it may be empty) and
                ivy is in at least one of ant's lib dir or the local lib dir. -->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>

		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml"
				 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

	<path id="lib.path">
		<fileset dir="${ivylib.dir}" includes="**/*.jar"/>
	</path>
	
	<target name="resolve" depends="init-ivy">
		<mkdir dir="${ivylib.dir}" />
		<ivy:retrieve pattern="${ivylib.dir}/[artifact].[ext]" sync="true"/>		
	</target>
	
	<target name="compile" depends="resolve">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}"
        	destdir="${classes.dir}"
         	debug="on"
         	source="1.5"
			encoding="utf8" >
			<classpath refid="lib.path"/>
		</javac>
	</target>
	
	<target name="dist" depends="compile">
		<mkdir dir="${dist.dir}" />

		<jar destfile="${dist.dir}/jsfilerequest.jar">
			<fileset dir="${classes.dir}"/>
    		<fileset dir="${src.dir}"/>
    	</jar>
	</target>
	
	<target name="project.file">
		<copy file="${base.dir}/project.template.xml" tofile="${base.dir}/project.xml" encoding="UTF-8">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>  
	
	<target name="publish" depends="dist, project.file" description="Publish artifacts into Ivy repository">  	
		<ivy:resolve />
		<ivy:publish
			pubrevision="${revision}"
			resolver="${ivy.publish.ydp.resolver}"
			status="${ivy.publish.status}"
			forcedeliver="true"
			artifactspattern="dist/[artifact].[ext]"
			overwrite="true"/>		
	</target>
		
	<target name="clean">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
		<delete dir="${ivylib.dir}" />
	</target>
</project>
